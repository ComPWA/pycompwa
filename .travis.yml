language: cpp
os: linux
dist: bionic # default

branches:
  only:
    - master
    - /\d+\.\d+.*/ # Run on tags e.g. 0.1.2
  except: gh-pages

env:
  global:
    - OMP_NUM_THREADS: 1
    - LANG: en_US.UTF-8
    - BASEPATH: "$TRAVIS_BUILD_DIR"
    - ROOTSYS: "$BASEPATH/root"

addons:
  homebrew:
    packages:
      - boost
      - python3
      - pip3
  apt:
    update: true
    packages:
      - libboost-all-dev
      - python3
      - python3-pip
      - python3-venv
      - pandoc

before_install: # activate virtual environment
  - cd $BASEPATH
  - python3 -m venv venv
  - source ./venv/bin/activate

install: # install dependencies
  - python3 -m pip install scikit-build
  - python3 -m pip install -r tests/requirements.txt
  - wget https://root.cern.ch/download/root_${ROOTBIN}.tar.gz
  - tar xpvfz root_*.tar.gz > /dev/null 2>&1
  - source root/bin/thisroot.sh

before_script: # build the project
  - cd $BASEPATH
  - python3 setup.py  --generator "Unix Makefiles" --skip-generator-test install -- -- -j2

jobs:
  include:
    - name: Test XCode build
      os: osx
      osx_image: xcode10.2
      env:
        - TASK="clang, ROOT v6.18"
        - ROOTBIN="v6.18.04.macosx64-10.14-clang100"
      script:
        - echo "The tests can't run on mac osx because of a wrong RPATH in the precompiled root binaries"

    - name: Test gcc build (Linux)
      os: linux
      dist: bionic
      compiler: gcc
      env:
        - TASK="gcc7, ROOT v6.18"
        - ROOTBIN="v6.18.04.Linux-ubuntu18-x86_64-gcc7.4"
      script:
        - cd $BASEPATH/tests
        - python -m pytest

    - name: Test and deploy documentation
      os: linux
      dist: bionic
      compiler: gcc
      env:
        - TASK="test and deploy documentation"
        - ROOTBIN="v6.18.04.Linux-ubuntu18-x86_64-gcc7.4"
      install:
        - wget https://root.cern.ch/download/root_${ROOTBIN}.tar.gz
        - tar xpvfz root_*.tar.gz > /dev/null 2>&1
        - source root/bin/thisroot.sh
        - cd $BASEPATH
        - python3 -m pip install -r requirements.txt
        - python3 -m pip install -r doc/requirements.txt
        - python3 -m pip install virtualenvwrapper
      before_script: echo "Running developer mode installation"
      script: # developer mode build
        - cd $BASEPATH
        - source venv/bin/virtualenvwrapper.sh
        - add2virtualenv $BASEPATH
        - mkdir build
        - cd build
        - cmake .. -DUSE_GENEVA=OFF -DPYTHON_EXECUTABLE=$(which python)
        - make -j2
        - cd $BASEPATH/pycompwa
        - ln -s ../build/ui*.so
        - cd $BASEPATH/doc
        - make linkcheck
        - NBSPHINX_EXECUTE='' make html
      before_deploy:
        - cd $BASEPATH
        - openssl aes-256-cbc -K $encrypted_ffa3dff63372_key -iv $encrypted_ffa3dff63372_iv -in github_deploy_key.enc -out github_deploy_key -d
      deploy:
        strategy: git # default
        provider: pages
        keep_history: true
        deploy_key: github_deploy_key
        cleanup: false
        edge: true
        repo: ComPWA/ComPWA.github.io
        target_branch: master
        local_dir: "$BASEPATH/doc/build/html"
        verbose: true
        on:
          branch: master

    - name: test clang build (Linux) + code coverage
      os: linux
      dist: bionic
      compiler: clang
      env:
        - TASK="clang, ROOT v6.18 + code coverage"
        - ROOTBIN="v6.18.04.Linux-ubuntu18-x86_64-gcc7.4"
      script:
        - cd $BASEPATH/tests
        - python -m pytest
      after_success:
        - python3 -m pip install codecov
        - python3 -m codecov

    - name: Deploy PyPI package
      os: linux
      dist: bionic
      env:
        - TASK="deployment"
      install:
        - pip install scikit-build
      script: echo "Skipping script stage!"
      before_script: echo "Skipping before_script stage!"
      deploy:
        - provider: pypi # Upload new release on pypi for each tagged commit
          on: # Make sure that the version number in setup.py is
            tags: true # increased before(!) you tag the commit  q
          distributions: sdist
          skip_existing: true
          username: __token__
          password:
            secure: NzI1qic8thtf/v2CFd+kc1Zvzi2A+lwsS/z7HXMfrf56tzLHCz7rjw/31M4hRvpx09iN8pxPndD5jchx2s+Yud7ukXopskAulZDwyb9OutfAHeIlJsHLbLg3fJrGs6Fs8ctRZ/NIIVp2WqLk3xbW09FFPQhlcAQttV0E6sVb3ew/DTpps+KsPYThIHbwKOLL4dFjDjGzR8OCDN0KOftSPir0BaYvBu6EWraG0+zpov458nw7XtOY0k7+mDbXo6ZipRBbPLye1JmoeOUrv8CmhpELtFV0GEQMCzzhvTK5cfUg5BgHSntWfZ6z8IofoRCEO8ksRH+UMTSurktXGpakF5VAQ5mmb0c8WxbWPBCuAyFgy3IHS8DjhKp2Y/Bh0mHIE2taYEMkspynAknG36eGt2CJrgkXL5R4I+TT2UikaPge74G4XdCqsKizmbiGN7umWSi7qrYbXadKtofBPh1cWR6JMivH0R9SLoqQ5fIMr6LN3PPG2Lbivs/0JtEtw0lq571gbENgHhHKYQDtpTiwGkoxERekcJJ/Q36jTqd7Ttszpx6TvwXsjmD1dcuPBSXfuEvhYTTv4buDFx06peI/elE2FF8auD3BhZKwz74v4h8ac4i5xWK7QMCtw9WxCxyNYfiNKzliLP/5KpHTnAxy5HKzOjy/3GMuDVFGY7USDOo=
